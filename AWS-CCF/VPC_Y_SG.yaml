AWSTemplateFormatVersion: '2010-09-09'
Description: Plantilla de CloudFormation para crear un laboratorio con VPC, subredes, instancias EC2, RDS, y grupos de seguridad.

Parameters:
  NombreAlumno:
    Type: String
    Description: Nombre del alumno para nombrar los recursos.
  DBName:
    Type: String
    Description: Nombre de la base de datos.
  DBUsername:
    Type: String
    Description: Nombre de usuario de la base de datos.
  DBPassword:
    Type: String
    Description: Contrase√±a de la base de datos.
    NoEcho: true

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.225.0.0/16
      Tags:
        - Key: Name
          Value: !Sub "vpc-mensagl-2025-${NombreAlumno}"

  SubnetPublic1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.225.1.0/24
      AvailabilityZone: !Select [0, !GetAZs]

  SubnetPublic2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.225.2.0/24
      AvailabilityZone: !Select [1, !GetAZs]

  SubnetPrivate1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.225.3.0/24
      AvailabilityZone: !Select [0, !GetAZs]

  SubnetPrivate2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.225.4.0/24
      AvailabilityZone: !Select [1, !GetAZs]

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "igw-mensagl-2025-${NombreAlumno}"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "rtb-public-mensagl-2025-${NombreAlumno}"

  RoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetPublic1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic1
      RouteTableId: !Ref RouteTablePublic

  SubnetPublic2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic2
      RouteTableId: !Ref RouteTablePublic

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref SubnetPublic1
      Tags:
        - Key: Name
          Value: !Sub "nat-mensagl-2025-${NombreAlumno}"

  RouteTablePrivate1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "rtb-private1-mensagl-2025-${NombreAlumno}"

  RoutePrivate1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  SubnetPrivate1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivate1
      RouteTableId: !Ref RouteTablePrivate1

  RouteTablePrivate2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "rtb-private2-mensagl-2025-${NombreAlumno}"

  RoutePrivate2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivate2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  SubnetPrivate2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPrivate2
      RouteTableId: !Ref RouteTablePrivate2

  SecurityGroupProxy:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: sg_proxy_inverso
      GroupDescription: SG para el proxy inverso
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8448
          ToPort: 8448
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  SecurityGroupCMS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: sg_cms
      GroupDescription: SG para el cluster CMS
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 33060
          ToPort: 33060
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  SecurityGroupMySQL:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: sg_mysql
      GroupDescription: SG para servidores MySQL
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref SecurityGroupMySQL
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !GetAtt SubnetPrivate1.CidrBlock
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  SecurityGroupMensajeria:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: sg_mensajeria
      GroupDescription: SG para XMPP Prosody y MySQL
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5222
          ToPort: 5222
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5347
          ToPort: 5347
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 10000
          ToPort: 10000
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5269
          ToPort: 5269
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 4443
          ToPort: 4443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5281
          ToPort: 5281
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 5280
          ToPort: 5280
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: wp-rds-subnet-group
      DBSubnetGroupDescription: RDS Subnet Group for WordPress
      SubnetIds:
        - !Ref SubnetPrivate1
        - !Ref SubnetPrivate2

  RDSInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: wordpress-db
      DBInstanceClass: db.t3.medium
      Engine: mysql
      AllocatedStorage: 20
      StorageType: gp2
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref SecurityGroupMySQL
      BackupRetentionPeriod: 7
      PubliclyAccessible: false
      AvailabilityZone: !Select [1, !GetAZs]
      MultiAZ: false

Outputs:
  VPCId:
    Description: ID de la VPC creada
    Value: !Ref VPC
  RDSEndpoint:
    Description: Endpoint del RDS
    Value: !GetAtt RDSInstance.Endpoint.Address